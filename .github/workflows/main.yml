name: CI/CD Docker Kubernetes

on:
  push:
    branches: [ main ]

env:
  DOCKER_IMAGE: ghcr.io/${{ github.repository }}
  VERSION: ${{ github.sha }}
  NAME: ${{ github.repository_id }}

jobs:
  build:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.VERSION }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ env.VERSION }}
          build-args: |
            NOTION_API_KEY=${{ secrets.NOTION_API_KEY }}

  deploy:
    needs: build
    name: Deploy to Kubernetes
    runs-on: [self-hosted]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure Kubernetes context
        uses: azure/k8s-set-context@v3
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - name: Deploy to Kubernetes
        run: |
          kubectl create deployment ${{ env.NAME }} --image=${{ env.DOCKER_IMAGE }}:${{ env.VERSION }} --namespace=default --dry-run=client -o yaml | kubectl apply -f -
          kubectl set image deployment/${{ env.NAME }} ${{ env.NAME }}=${{ env.DOCKER_IMAGE }}:${{ env.VERSION }} --namespace=default --record

          kubectl expose deployment ${{ env.NAME }} --port=3001 --target-port=3000 --type=ClusterIP --namespace=default --dry-run=client -o yaml | kubectl apply -f -