name: CI/CD Docker Kubernetes

on:
  push:
    branches: [ main ]

env:
  DOCKER_IMAGE: ghcr.io/${{ github.repository }}
  VERSION: ${{ github.sha }}
  NAME: ${{ github.repository_id }}

jobs:
  build:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.VERSION }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ env.VERSION }}
          build-args: |
            NOTION_API_KEY=${{ secrets.NOTION_API_KEY }}

  deploy:
    needs: build
    name: Deploy to Kubernetes
    runs-on: [self-hosted]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure Kubernetes context
        uses: azure/k8s-set-context@v3
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - name: Update Docker Registry Secret
        run: |
          kubectl delete secret ghcr-secret -n default --ignore-not-found
          kubectl create secret docker-registry ghcr-secret --docker-server=ghcr.io --docker-username=${{ github.repository_owner }} --docker-password=${{ secrets.GHCR_TOKEN }} --docker-email=${{ github.repository_owner }}@users.noreply.github.com --namespace=default

      - name: Deploy to Kubernetes
        run: |
          cat <<EOF | kubectl apply -f -
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: app-${{ env.NAME }}
            namespace: default
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: app-${{ env.NAME }}
            template:
              metadata:
                labels:
                  app: app-${{ env.NAME }}
              spec:
                imagePullSecrets:
                - name: ghcr-secret
                containers:
                - name: app-${{ env.NAME }}
                  image: ${{ env.DOCKER_IMAGE }}:${{ env.VERSION }}
                  ports:
                  - containerPort: 3000
                  env:
                  - name: NOTION_API_KEY
                    value: "${{ secrets.NOTION_API_KEY }}"
          ---
          apiVersion: v1
          kind: Service
          metadata:
            name: app-${{ env.NAME }}
            namespace: default
          spec:
            type: ClusterIP
            ports:
            - port: 3001
              targetPort: 3000
            selector:
              app: app-${{ env.NAME }}
          EOF